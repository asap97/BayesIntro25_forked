---
title: "Assignment 2"
subtitle: "Introduction to Bayesian Data Analysis 2025"
author: 'Ana Sofia Acevedo (03805441)'
format: pdf 
editor_options: 
  chunk_output_type: console
---

<!--Preamble-->

## Preamble 

  - **Points**: Assignment 2 comprises of 6 tasks, 2 points each (12 in total). 2 points are obtained for complete and correct answers. 1 point is obtained for a proper approach or if only part of the task is solved.
  
  - **Submission**: Hand in the assignment as a PDF `Markdown` report. The report should show the results, the code that produced the results, and additional text or comment. The report should appear clean and be uploaded on Moodle until Wednesday, June 11, 9:45 am.
  
  - **Collaboration**: Reports can be handed in as team work (max. 2 people). When working in teams, declare this on page 2. However, each collaborator needs to hand in a report via Moodle, stating their name, student number (p. 1), and their machine specification (p. 2).  
  
  - **Permitted and Prohibited**: You may use materials from this class (e.g., slides, code on GitHub) as well as online forums such as [Stack Overflow](https://Stackoverflow.com/questions) to write your code. However, you are not allowed to post questions from the assignment online or prompt them (including paraphrases) to LLMs/chatbots. All use of LLMs/chatbots is generally not allowed. Solutions may not be shared with other students from the class (except 1 potential collaborator).
  
  
\newpage


## Authorship Information


```{r}
#| include: false
individual <- 'I certify that this assignment represents my own work. I have not used any unauthorized or unacknowledged aids as stated in the preamble, including free or commercial systems or services offered on the internet or text generating systems embedded into software. I did not copy code from someone else nor did I share my code with someone else.' 

collab <- 'I certify that this assignment represents collaborative work by me and my collaborator listed below. I confirm that both contributed equally to this assignment and that we are equally responsible for the entirety of this report that we will receive the same grade on this report. I have not used any unauthorized or unacknowledged aids as stated in the preamble, including free or commercial systems or services offered on the internet or text generating systems embedded into software. I did not copy code nor did I share my code with someone other than my collaborator. I also found no indication for any such misconduct by collaborator.'
```


**1. Declaration of Collaboration**

<!--If you collaborated, set collaboration <- TRUE --> 

```{r}
#| include: false
collaboration <- FALSE # FALSE: Individual work; TRUE: Collaboration
```

<!--If you collaborated, check the 'Yes' box and enter the collaborator name--> 

- [ ] Yes (Collaborator name) 
- [x] No


**2. Declaration of Authorship**

<!--Before handing in the assignment, check the box by adding an 'X" to the box -->

- [x] `r ifelse(collaboration==FALSE, individual, collab)`


**3. System Information**

```{r}
#| include: false
info <-sessionInfo()
time <- Sys.time()
```


- [x] I confirm that I generated the submitted PDF report myself using `r info$R.version$version.string` and `Quarto`/`RMarkdown`. 


Machine stamp: `r info$platform`

Timestamp: `r format(time, "%Y-%m-%d %H:%M:%S %Z")`


\newpage
  
```{r}
library(tidyverse)
library(ggplot2)
library(data.tree)
```


# Task Set 1

For tasks 1.1-1.2, suppose there are 3 companies, Company A to C. 
Company A has a customer satisfaction rate of .60, Company B of .80, and Company C of .83. 
Further suppose that you receive 10 customer reviews (8 positive, 2 negative) for the same company, but you don’t know for which company.
Assume that Company A is three times more likely to obtain reviews than Company B and C.  

## Task 1.1

Which company maximizes the likelihood of the 10 reviews and which company has the highest posterior probability that it was rated? 

#### Answer

```{r}
#Assuming the satisfaction rate of 0.6 means that 60% of reviews are positive
data <- data.frame(company = c("A","B","C"), sr =c(.6, .8, .83), 
                   prior = c(3/5,1/5,1/5))

# This function takes a data frame that has at least 3 columns, for the 
# candidate (name first column and rate second column) and the prior 
# (third column), a number of trials N and a number of success s.
updating <- function(data, N, s){
  candidates <- data[, 2]
  prior <- data[, 3]
  
  lh <- dbinom(s, N, prob = candidates)
  posterior <- prior*lh
  posterior_norm <- posterior / sum(posterior)
  
  data$likelihood <- lh
  data$posterior <- posterior_norm
  data[ , -(1:2)] <- round(data[ , -(1:2)], 4)
  
  return(data)
}

data <- updating(data, 10, 8)
data


```

## Task 1.2

Suppose you receive 10 more reviews (3 positive and 7 negative). 
Show that the posterior probability that Company B received the reviews decreases by $\approx$ 30 percentage points, when considering all 20 rather than only the first 10 reviews. 
To obtain the updated posterior probability, only compute the likelihood of the 10 most recent reviews. 

#### Answer
```{r}
# Yesterday's posterior is today's prior (this considers all the info from the 
# 20 reviews), ansd computing the likelihood of ony the 10 most recent reviews
data_1 <- data[,1:3]
post_1 <- data$posterior
data_1$prior <- data$posterior
data_1 <- updating(data_1, 10, 3)
post_2 <- data_1$posterior

# Posterior for company B before and after this update
post_1[2]
post_2[2]

# Difference between posteriors 
post_1[2]-post_2[2]

```

\newpage

# Task Set 2

For tasks 2.1 and 2.2, suppose there are Factory A, Factory B and Factory C, producing the same product.
The head company receives 50% of its shipments from A and 25% each from B and C. 
Even though the machines, processes, and standards are virtually identical, the factories differ in
their defect rates. 
Shipments from Factory A entail defective products 10% of the time, shipments from Factory B 15% of the time, and shipments from Factory C 20% .

## Task 2.1

You receive a shipment from one of the factories, and upon inspection, you find that the shipment contains defective products.
Compute the probability that the next shipment from this company will also contain defective products.

#### Answer

```{r}
data <- data.frame(factory = c("A","B","C"), dr =c(.1, .15, .2), 
                   prior = c(.5,.25,.25))
# Observation is that one defect occurred, so the belief is updated 
data_1 <- updating(data, 1, 1)
data_1
# Does A, or B, or C have a defect in the next shipment? Is calculated as an 
# expected value 
sum(data_1$dr*data_1$posterior)

```


## Task 2.2

Suppose the R&D department came up with a Machine Learning algorithm that (imperfectly) identifies the factory based on the shipped products.
But the classification algorithm is imperfect. 
This is the information you have about the algorithm: 

  - Correct identification Factory A: 90%   (False identification of B/C: 5% / 5%)
  - Correct identification Factory B: 95% (False identification of A/C: 4% / 1%)
  - Correct identification Factory C: 85% (False identification of A/B: 6% / 9%)
  
  
When applying the algorithm to the shipped products, the test is positive for Factory A.
Including the defect data from 2.1, compute the posterior probability that your shipment is from Company A. 

#### Answer

```{r}
# By drawing a garden of forking data, and setting the prior probabilities as 
# the posterior probabilities calculated in the last step
tree <- Node$new("Sample")

a <- tree$AddChild("A"); a$prob <- data_1[1,"posterior"]
b <- tree$AddChild("B"); b$prob <- data_1[2,"posterior"]
c <- tree$AddChild("C"); c$prob <- data_1[2,"posterior"]
a1 <- a$AddChild("A"); a1$prob <- 0.9
a2 <- a$AddChild("B"); a2$prob <- 0.05
a3 <- a$AddChild("C"); a3$prob <- 0.05
b1 <- b$AddChild("A"); b1$prob <- 0.04
b2 <- b$AddChild("B"); b2$prob <- 0.95
b3 <- b$AddChild("C"); b3$prob <- 0.01
c1 <- c$AddChild("A"); c1$prob <- 0.06
c2 <- c$AddChild("B"); c2$prob <- 0.09
c3 <- c$AddChild("C"); c3$prob <- 0.85

print(tree, "prob")

```

To calculate the posterior using Bayes' the formula is 

$$
P(A_{True} \mid ML=A) = \frac{P(ML=A \mid A_{True}) \cdot P(A_{True})}{P(ML=A)}
$$
Where $P(A_{True})$ is the probability that it actually comes from A and $P(ML=A)$ is that the machine learning algorithm predict it comes from factory A. Hence, 

```{r}
# Since we include the defect, that is we have seen a defect and updated the 
#beliefs, the prior is the posterior of the last point, and the likelihood is 
# the probability that the ML algorithm gives A given that A is true (that if 
# A really made the product the ML shows A), which is 0.9
num <- 0.9*data_1[1,"posterior"]
den <- data_1[1,"posterior"]*0.9+data_1[2,"posterior"]*0.04+data_1[3,"posterior"]*0.06
num/den
```


\newpage


# Task Set 3


For Task 3.1 and 3.2, suppose, one last time, you want to estimate the proportions of land on the earth’s surface.

## Task 3.1

Specify a prior distribution and store 10,000 random samples from it in a vector `sample`.
Plot the prior distribution and briefly explain your choice of the prior.

#### Answer

I chose a beta distribution with a mean close to 0.3 because the "general knowledge" is the Earth's surface is covered 70% water, but I considered values lower than 0.3 were more likely because of the melting of ice caps which could increase the percentage of water that covers the surface. 

```{r}
a <- 7
b <- 15

theta <- seq(0,1, length.out = 1e4)
d <- dbeta(theta, shape1 = a, shape2 = b)
summary <- data.frame(theta, d)

# sample from prior
no <- 1e4
sample <- data.frame(smp = rbeta(no, a, b))

ggplot(summary) +
  geom_line(size = 1, linetype = "dashed",  color = "#ff02ff", 
            aes(x = theta, y = d)) +
  geom_density(data = sample, aes(x = smp), color = "green", linewidth = 1) + 
  labs(x = expression(theta), 
       y = "Density", title = "Prior and sampling from it")


```

## Task 3.2 

Run the following code chunk that uses your object `sample` to obtain prior probabilities
for the possible proportions of land 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1 that
approximate your prior distribution. 

```{r}
prop <- seq(0, 1, length.out = 12)
priors <- vector("numeric", length(prop))
for (i in seq_along(prop)){
priors[i] <- round( sum(sample >= prop[i] & sample < prop[i+1]) / 1e4 , 2)
}
poss <- tibble(prop_L = seq(0, 1, .1), prior = priors[1:11])
poss

```

Use these priors to compute the posterior probability after observing 26 times land in 100 globe tosses.
Take 1,000 samples from the posterior distribution and with each sample, predict the outcome of 100 globe tosses.
Plot the posterior predictions in a histogram.

#### Answer

I also plotted some generated data with the prior just so see how it would compare with the data generated after updating with the new observations. 

```{r}
# Sample from prior
N <- 1e3
sample <- sample(poss$prop_L, size=N, replace=T, prob=poss$prior)
sample <- data.frame(smp=sample)

# Predict using the prior
preds <- data.frame(L =vector("numeric", N))

for (i in seq_along(sample$smp)){ 
  preds[i, "L"] <- rbinom(n = 1, size = 100, prob = sample[i, "smp"])
}

preds %>% ggplot(aes(x=L)) + 
  geom_histogram(fill = "green", color = "green", 
                 alpha = .5, bins = 100) + 
  scale_x_continuous(limits = c(0,100)) + 
  labs(x = "# of Land observed",
       y = "Frequency", title = "# of Times L is observed in 100 tosses for 
       each sampled value of cp obtained using the prior") +
  theme(plot.title = element_text(size=12))

```

Now updating and using the posterior

```{r}
# Updating with the new observations
lh <- dbinom(26, 100, prob = poss$prop_L)
posterior <- poss$prior*lh
posterior_norm <- posterior / sum(posterior)

poss$likelihood <- lh
poss$posterior <- posterior_norm
poss[ , -(1:2)] <- round(poss[ , -(1:2)], 4)
poss

# Sample from posterior
N <- 1e3
post_sample <- sample(poss$prop_L, size=N, replace=T, prob=poss$posterior)
post_sample <- data.frame(smp=post_sample)

# Predict using the posterior
preds <- data.frame(L =vector("numeric", N))

for (i in seq_along(post_sample$smp)){ 
  preds[i, "L"] <- rbinom(n = 1, size = 100, prob = post_sample[i, "smp"])
}

preds %>% ggplot(aes(x=L)) + 
  geom_histogram(fill = "green", color = "green", 
                 alpha = .5, bins = 100) + 
  scale_x_continuous(limits = c(0,100)) + labs(x = "# of Land observed",
  y = "Frequency", title = "# of Times L is observed in 100 tosses for each
  sampled value of cp obtained using the posterior") +
  theme(plot.title = element_text(size=12))


```


