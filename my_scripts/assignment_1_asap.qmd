---
title: "Assignment 1"
subtitle: "Introduction to Bayesian Data Analysis 2025"
author: 'Ana Sofia Acevedo (03805441)'
format: pdf
---

<!--Preamble-->

## Preamble 

  - **Points**: Assignment 1 comprises of 6 tasks, 2 points each (12 in total). 2 points are obtained for complete and correct answers. 1 point is obtained for a proper approach or if only part of the task is solved.
  
  - **Submission**: Hand in the assignment as a PDF `Markdown` report. The report should show the results, the code that produced the results, and additional text or comment. The report should appear clean and be uploaded on Moodle until Wednesday, June 04, 9:45 am.
  
  - **Collaboration**: Reports can be handed in as team work (max. 2 people). When working in teams, declare this on page 2. However, each collaborator needs to hand in a report via Moodle, stating their name, student number (p. 1), and their machine specification (p. 2).  
  
  - **Permitted and Prohibited**: You may use materials from this class (e.g., slides, code on GitHub) as well as online forums such as [Stack Overflow](https://Stackoverflow.com/questions) to write your code. However, you are not allowed to post questions from the assignment online or prompt them (including paraphrases) to LLMs/chatbots. All use of LLMs/chatbots is generally not allowed. Solutions may not be shared with other students from the class (except 1 potential collaborator).
  
  
\newpage


## Authorship Information


```{r}
#| include: false
individual <- 'I certify that this assignment represents my own work. I have not used any unauthorized or unacknowledged aids as stated in the preamble, including free or commercial systems or services offered on the internet or text generating systems embedded into software. I did not copy code from someone else nor did I share my code with someone else.' 

collab <- 'I certify that this assignment represents collaborative work by me and my collaborator listed below. I confirm that both contributed equally to this assignment and that we are equally responsible for the entirety of this report that we will receive the same grade on this report. I have not used any unauthorized or unacknowledged aids as stated in the preamble, including free or commercial systems or services offered on the internet or text generating systems embedded into software. I did not copy code nor did I share my code with someone other than my collaborator. I also found no indication for any such misconduct by collaborator.'
```


**1. Declaration of Collaboration**

<!--If you collaborated, set collaboration <- TRUE --> 

```{r}
#| include: false
collaboration <- FALSE # FALSE: Individual work; TRUE: Collaboration
```

<!--If you collaborated, check the 'Yes' box and enter the collaborator name--> 

- [ ] Yes (Collaborator name) 
- [X] No


**2. Declaration of Authorship**

<!--Before handing in the assignment, check the box by adding an 'X" to the box -->

- [X] `r ifelse(collaboration==FALSE, individual, collab)`


**3. System Information**

```{r}
#| include: false
info <-sessionInfo()
time <- Sys.time()
```


- [X] I confirm that I generated the submitted PDF report myself using `r info$R.version$version.string` and `Quarto`/`RMarkdown`. 


Machine stamp: `r info$platform`

Timestamp: `r format(time, "%Y-%m-%d %H:%M:%S %Z")`


\newpage


```{r}
#| message: false
#| warning: false
# load packages here
library(tidyverse)
library(ggplot2)
library(gtools)
```



## Task Set 1

For tasks 1.1-1.3, assume you throw 3 dice---normal dice with 6 sides each ;-)

### Task 1.1

Create a data frame with all possible combinations (outcomes) that can result from throwing all three dice. 
Each row should represent one possible outcome.
Print the first/last 10 rows and the total number of possible outcomes to the output.

```{r}
perm <- as.data.frame(permutations(6,3, repeats.allowed = TRUE))
print(head(perm, 10))
print(tail(perm, 10))
print(nrow(perm))
```

### Task 1.2

Create a data frame showing all possible sums that can result from throwing the three dice (e.g., if all three dice show a `1`, the sum is `3`) along with their probabilities.
Print the data frame to the output and visualize the distribution in a plot.

```{r}
data <- as.data.frame(table(rowSums(perm)))
colnames(data) <- c("sum", "prob")
data$prob <- data$prob/sum(data$prob)
print(data)

ggplot(data, aes(x=sum, y=prob)) + 
  geom_bar(stat = "identity")
```

### Task 1.3

Which of the following events is more likely?

- [X] A. The sum is $\geq$ `12`, *given* that at least one of the dice shows a `4`.
- [ ] B. The sum is $\leq$ `10`, *given* that at least one of the dice shows a `5`.

```{r}
perm$total <- rowSums(perm)
num_1 <- nrow(perm[(perm$total>=12) & (perm$V1==4 | perm$V2==4 | perm$V3==4),])/nrow(perm)
den_1 <- nrow(perm[(perm$V1==4 | perm$V2==4 | perm$V3==4),])/nrow(perm)
num_1/den_1

num_2 <- nrow(perm[(perm$total<=10) & (perm$V1==5 | perm$V2==5 | perm$V3==5),])/nrow(perm)
den_2 <- nrow(perm[(perm$V1==5 | perm$V2==5 | perm$V3==5),])/nrow(perm)
num_2/den_2
```


\newpage

## Task Set 2

For Task 2.1-2.3, assume you toss a globe `10` times, leading to either land or water.

### Task 2.1

Compute the probability of all possible numbers of occurrence of land, given the candidate proportion of `.3`.
Report the results in a summary table and a plot and indicate whether the plot shows a probability distribution or a likelihood function.

```{r}
# i is the number of times that land is observed, 
# so 10-i is the number of times water is observed
df <- data.frame(land = 0:10, probs = rep(0,11))
for (i in 0:10){
  df[i+1, 2] <- dbinom(i, size = 10, prob = 0.3) 
}
df

ggplot(df, aes(x = land, y = probs)) +
  geom_line(linewidth = 1.2) +
  labs(title = "Probability of observing land given p=0.3",
       x = "Times land is observed",
       y = "Probability") +
  theme_minimal()

```

### Task 2.2

Assume you observe `8` water.
Take the candidate proportions of land `cp =` `r seq(0,1,.1)`.
For each of these candidates, compute the probability of this observation. 
Report the results in a summary table and a plot and indicate whether the plot shows a probability distribution or a likelihood function.

```{r}
# Es como la que esta en session_05 compute_post, da exactamente igual
counter_prob_1 <- function(data, cp){
  L <- sum(data == "L")
  W <- sum(data == "W")
  probs <- (cp)^L * ((1 - cp))^W
  probs <- probs/sum(probs)
  data.frame(cp, probs)
}

data <- c(rep("W", 8), "L","L")
cp_seq <- seq(0, 1, 0.1)
results <- counter_prob_1(data, cp = cp_seq)
results$probs <- round(results$probs, 3)

df_1 <- data.frame(cp = seq(0, 1, 0.1), probs = rep(0,11))
count <- 1
for (i in seq(0, 1, 0.1)){
  df_1[count,2] <- dbinom(2, size = 10, prob = i) 
  count <- count+1
}
df_1$probs <- df_1$probs / sum(df_1$probs)
df_1$probs <- round(df_1$probs, 3)
df_1


ggplot(results, aes(x = cp, y = probs)) +
  geom_line(size = 1.2) +
  labs(title = "Likelihood of candidate proportions of Land",
       x = "Proportion of Land (cp)",
       y = "Likelihood") +
  theme_minimal()
```

### Task 2.3

For each candidate proportion of land, compute the probability of all possible number of occurrences of land.
Report the results in a summary table, showing the probability distributions as columns and the likelihood functions as rows.

```{r}
cp_seq <- seq(0, 1, 0.1)
land <- c(0:10)
df_2 <- data.frame(matrix(0, nrow=length(land), ncol=length(cp_seq)+1))
colnames(df_2) <- c("land", as.character(cp_seq))
df_2$land <- land

for (i in land){
  for (j in cp_seq){
    df_2[i+1,as.character(j)] <- dbinom(i, size = 10, prob = j) 
  }
}
```


